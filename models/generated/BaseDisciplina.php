<?php

/**
 * BaseDisciplina
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idDisciplina
 * @property integer $idAreaMenor
 * @property integer $idProfessor
 * @property string $nomeDisciplina
 * @property Areamenor $Areamenor
 * @property Professor $Professor
 * @property Doctrine_Collection $Assunto
 * @property Doctrine_Collection $Ementa
 * @property Doctrine_Collection $Turma
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDisciplina extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('disciplina');
        $this->hasColumn('idDisciplina', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('idAreaMenor', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('idProfessor', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nomeDisciplina', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Areamenor', array(
             'local' => 'idAreaMenor',
             'foreign' => 'idAreaMenor'));

        $this->hasOne('Professor', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Assunto', array(
             'local' => 'idDisciplina',
             'foreign' => 'idDisciplina'));

        $this->hasMany('Ementa', array(
             'local' => 'idDisciplina',
             'foreign' => 'idDisciplina'));

        $this->hasMany('Turma', array(
             'local' => 'idDisciplina',
             'foreign' => 'idDisciplina'));
    }
}