<?php

/**
 * BaseProfessor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idProfessor
 * @property string $validador
 * @property string $nomeProfessor
 * @property date $nascimento
 * @property integer $tituloMax
 * @property string $areaAtuacao
 * @property integer $nivelAtuacao
 * @property string $logradouro
 * @property string $numero
 * @property string $bairro
 * @property string $cidade
 * @property string $estado
 * @property string $pais
 * @property string $cep
 * @property string $email
 * @property string $telCel
 * @property string $login
 * @property string $senha
 * @property Doctrine_Collection $Aluno
 * @property Doctrine_Collection $Chamado
 * @property Doctrine_Collection $Disciplina
 * @property Doctrine_Collection $Funcionalidades
 * @property Doctrine_Collection $Instituicao
 * @property Doctrine_Collection $Itemcurriculo
 * @property Doctrine_Collection $Lembrete
 * @property Doctrine_Collection $Mensagem
 * @property Doctrine_Collection $Trabalha
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfessor extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('professor');
        $this->hasColumn('idProfessor', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('validador', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nomeProfessor', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nascimento', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('tituloMax', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('areaAtuacao', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nivelAtuacao', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('logradouro', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('numero', 'string', 5, array(
             'type' => 'string',
             'length' => 5,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('bairro', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('cidade', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('estado', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('pais', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('cep', 'string', 8, array(
             'type' => 'string',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('telCel', 'string', 11, array(
             'type' => 'string',
             'length' => 11,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('login', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('senha', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Aluno', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Chamado', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Disciplina', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Funcionalidades', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Instituicao', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Itemcurriculo', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Lembrete', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Mensagem', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));

        $this->hasMany('Trabalha', array(
             'local' => 'idProfessor',
             'foreign' => 'idProfessor'));
    }
}